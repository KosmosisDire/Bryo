name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v2
      with:
        version: "19.1.7"
        directory: ${{ runner.temp }}/llvm

    - name: Install Linux system dependencies
      run: |
        sudo apt update
        sudo apt install -y zlib1g-dev libcurl4-openssl-dev libedit-dev libzstd-dev

    - name: Configure CMake (Linux)
      run: |
        cmake --preset linux-release
        
    - name: Build (Linux)
      run: |
        cmake --build build --config Release

    - name: Package Linux binary
      run: |
        mkdir -p artifacts/linux
        cp build/Bryo artifacts/linux/bryo-linux-x64
        chmod +x artifacts/linux/bryo-linux-x64

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: bryo-linux-x64
        path: artifacts/linux/bryo-linux-x64

  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v2
      with:
        version: "19.1.7"
        directory: ${{ runner.temp }}/llvm

    - name: Setup vcpkg
      uses: lukka/get-cmake@latest

    - name: Install vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat
        echo "${{ github.workspace }}\vcpkg" >> $env:GITHUB_PATH

    - name: Set VCPKG_ROOT
      run: echo "VCPKG_ROOT=${{ github.workspace }}\vcpkg" >> $env:GITHUB_ENV

    - name: Configure CMake (Windows)
      run: |
        cmake --preset windows-vcpkg-ninja-release
        
    - name: Build (Windows)
      run: |
        cmake --build build/Release --config Release

    - name: Package Windows binary
      run: |
        mkdir artifacts\windows
        copy build\Release\Bryo.exe artifacts\windows\bryo-windows-x64.exe

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: bryo-windows-x64
        path: artifacts/windows/bryo-windows-x64.exe

  create-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: bryo-linux-x64
        path: ./

    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: bryo-windows-x64
        path: ./

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          bryo-linux-x64
          bryo-windows-x64.exe
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}