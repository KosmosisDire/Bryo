type Vector2
{
    f32 x
    f32 y
    
    new(f32 xVal, f32 yVal)
    {
        x = xVal
        y = yVal
    }
    
    fn Length -> f32
    {
        return (x * x + y * y) ** 0.5
    }
    
    op +(Vector2 other) -> Vector2
    {
        return new Vector2(x + other.x, y + other.y)
    }
}

fn ProcessVectors(Vector2[] vectors) -> f32
{
    var sum = 0.0
    for var vec in vectors
    {
        sum += vec.Length()
    }
    return sum
}

fn Main_f32_
{
    var vectors = [
        new Vector2(3.0, 4.0),
        new Vector2(1.0, 0.0),
        new Vector2(0.0, 1.0)
    ]
    return ProcessVectors(vectors)
}
